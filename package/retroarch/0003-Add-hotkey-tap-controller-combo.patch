From 45784d4e206c80eafbb47214ccfc3cf3243f1ab2 Mon Sep 17 00:00:00 2001
From: Black-Seraph <admin@black-seraph.com>
Date: Thu, 8 Jun 2023 15:54:19 +0200
Subject: [PATCH 1/1] Add hotkey tap controller combo

---
 input/input_defines.h |  1 +
 input/input_driver.c  | 29 +++++++++++++++++++++++++++++
 intl/msg_hash_us.h    |  4 ++++
 menu/menu_setting.c   |  3 +++
 msg_hash.h            |  1 +
 5 files changed, 38 insertions(+)

diff --git a/input/input_defines.h b/input/input_defines.h
index 75e6768..b428b68 100644
--- a/input/input_defines.h
+++ b/input/input_defines.h
@@ -168,6 +168,7 @@ enum input_combo_type
    INPUT_COMBO_L_R,
    INPUT_COMBO_HOLD_START,
    INPUT_COMBO_HOLD_SELECT,
+   INPUT_COMBO_TAP_HOTKEY,
    INPUT_COMBO_DOWN_SELECT,
    INPUT_COMBO_L2_R2,
    INPUT_COMBO_LAST
diff --git a/input/input_driver.c b/input/input_driver.c
index 4d76862..37f58b6 100644
--- a/input/input_driver.c
+++ b/input/input_driver.c
@@ -700,6 +700,35 @@ bool input_driver_button_combo(
             }
          }
          break;
+      case INPUT_COMBO_TAP_HOTKEY:
+         {
+            rarch_timer_t *timer = &input_driver_st.combo_timers[INPUT_COMBO_TAP_HOTKEY];
+
+            if (!BIT256_GET_PTR(p_input, RARCH_ENABLE_HOTKEY))
+            {
+               /* timer only runs while the enable hotkey is held down */
+               bool result = timer->timeout_us > 0;
+               timer->timer_end   = true;
+               timer->timer_begin = false;
+               timer->timeout_end = 0;
+               return result;
+            }
+
+            /* User started holding down the hotkey enable button, start the timer */
+            if (!timer->timer_begin)
+            {
+               uint64_t current_usec = cpu_features_get_time_usec();
+               timer->timeout_us     = 175000;
+               timer->current        = current_usec;
+               timer->timeout_end    = timer->current + timer->timeout_us;
+               timer->timer_begin    = true;
+               timer->timer_end      = false;
+            }
+
+            timer->current           = current_time;
+            timer->timeout_us        = (timer->timeout_end - timer->current);
+         }
+         break;
       default:
       case INPUT_COMBO_NONE:
          break;
diff --git a/intl/msg_hash_us.h b/intl/msg_hash_us.h
index bcb0844..3a73e84 100644
--- a/intl/msg_hash_us.h
+++ b/intl/msg_hash_us.h
@@ -9937,6 +9937,10 @@ MSG_HASH(
    MENU_ENUM_LABEL_VALUE_HOLD_SELECT,
    "Hold Select (2 seconds)"
    )
+MSG_HASH(
+   MENU_ENUM_LABEL_VALUE_TAP_HOTKEY,
+   "Tap Hotkey (< 175ms down time)"
+   )
 MSG_HASH(
    MENU_ENUM_LABEL_VALUE_DOWN_SELECT,
    "Down + Select"
diff --git a/menu/menu_setting.c b/menu/menu_setting.c
index 402630e..1f03cf8 100644
--- a/menu/menu_setting.c
+++ b/menu/menu_setting.c
@@ -6560,6 +6560,9 @@ static void setting_get_string_representation_gamepad_combo(
       case INPUT_COMBO_HOLD_SELECT:
          strlcpy(s, msg_hash_to_str(MENU_ENUM_LABEL_VALUE_HOLD_SELECT), len);
          break;
+      case INPUT_COMBO_TAP_HOTKEY:
+         strlcpy(s, msg_hash_to_str(MENU_ENUM_LABEL_VALUE_TAP_HOTKEY), len);
+         break;
       case INPUT_COMBO_DOWN_SELECT:
          strlcpy(s, msg_hash_to_str(MENU_ENUM_LABEL_VALUE_DOWN_SELECT), len);
          break;
diff --git a/msg_hash.h b/msg_hash.h
index 2aeb7d6..6ee3ad8 100644
--- a/msg_hash.h
+++ b/msg_hash.h
@@ -3857,6 +3857,7 @@ enum msg_hash_enums
    MENU_ENUM_LABEL_VALUE_L_R,
    MENU_ENUM_LABEL_VALUE_HOLD_START,
    MENU_ENUM_LABEL_VALUE_HOLD_SELECT,
+   MENU_ENUM_LABEL_VALUE_TAP_HOTKEY,
    MENU_ENUM_LABEL_VALUE_DOWN_SELECT,
    MENU_ENUM_LABEL_VALUE_L2_R2,
 
-- 
2.25.1

